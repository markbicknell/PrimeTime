name: CI
# Controls when the action will run.
on: [push]
#on:
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}
    strategy:
      # prevent cancelling of all 
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            triplet: x64-windows
            vcpkgCommitId: '8a9a97315aefb3f8bc5d81bf66ca0025938b9c91'
            vcpkgPackages: 'sqlite3'
          - os: ubuntu-latest
            triplet: x64-linux
            vcpkgCommitId: '8a9a97315aefb3f8bc5d81bf66ca0025938b9c91'
            vcpkgPackages: 'sqlite3'
          - os: macos-latest
            triplet: x64-osx
            vcpkgCommitId: '8a9a97315aefb3f8bc5d81bf66ca0025938b9c91'
            vcpkgPackages: 'sqlite3'

    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      # Note: there is a checkout@v2
      - uses: actions/checkout@v1
        with:
          submodules: true

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - uses: lukka/get-cmake@latest
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@add_triplet_to_cachekey
        id: runvcpkg
        with:
          vcpkgArguments: '${{ matrix.vcpkgPackages }}'
          vcpkgTriplet: '${{ matrix.triplet }}'
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Prints outputs of run-vcpkg task
        run: echo "'${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}' '${{  steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}' "
      - name: Run CMake+Ninja without triplet
        uses: lukka/run-cmake@v2
        id: runcmake
        with:
          cmakeGenerator: 'Ninja'  
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/cpp/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          buildDirectory: '${{ runner.workspace }}/b/ninja/'
      - name: Run CMake+Ninja with triplet (cmd)
        uses: lukka/run-cmake@v2
        id: runcmake_cmd
        with:
          cmakeGenerator: 'Ninja'  
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/cpp/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          vcpkgTriplet: ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}
          buildDirectory: '${{ runner.workspace }}/b/ninja/'
      - name: post_build_dir
        run: find $RUNNER_WORKSPACE
        shell: bash
      - name: Run unit tests
        run: $(RUNNER_WORKSPACE)/PrimeTime/b/ninja/unit_test
        shell: bash
